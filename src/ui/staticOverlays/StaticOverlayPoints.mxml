<?xml version="1.0"?>
<staticOverlays:StaticOverlay xmlns:fx="http://ns.adobe.com/mxml/2009"
                              xmlns:s="library://ns.adobe.com/flex/spark"
                              xmlns:c="ui.parts.components.*"
                              xmlns:staticOverlays="ui.staticOverlays.*">
    <fx:Script><![CDATA[
        import events.AppEvent;
        import events.AppEvent;

        import global.Color;
        import global.Icons;
        import global.Local;

        import mx.events.FlexEvent;

        import ui.panes.PaneLayers;

        override protected function onCreationComplete(event:FlexEvent):void
        {
            super.onCreationComplete(event);
        }

        override protected function addEventListeners():void
        {
            signal.addEventListener(AppEvent.MAP_MOUSE_MOVE, onMouseMoveAnywhere);
            signal.addEventListener(AppEvent.MAP_ZOOM, onZoom);
            signal.addEventListener(AppEvent.MAP_ZOOM, onZoom);
        }

        override protected function removeEventListeners():void
        {
            signal.removeEventListener(AppEvent.MAP_MOUSE_MOVE, onMouseMoveAnywhere);
            signal.removeEventListener(AppEvent.MAP_ZOOM, onZoom);
            signal.removeEventListener(AppEvent.MAP_ZOOM, onZoom);
        }

        private function onMouseMoveAnywhere(event:AppEvent):void
        {
            var point:Point = event.payload;
            labelMouse.text = "x=" + point.x + ", y=" + point.y;
        }

        private function onZoom(event:AppEvent):void
        {
            var zoomLevel:Number = event.payload;
            labelZoom.text = int(zoomLevel * 100) + "%";
        }

        private function onToggleLayers(event:MouseEvent):void
        {
            signal.dispatchEvent(new AppEvent(AppEvent.OPEN_PANE, new PaneLayers()));
        }

        private function onZoomOut(event:MouseEvent):void
        {
            signal.dispatchEvent(new AppEvent(AppEvent.ZOOM_OUT));
        }

        private function onZoomIn(event:MouseEvent):void
        {
            signal.dispatchEvent(new AppEvent(AppEvent.ZOOM_IN));
        }

        private function onCenterMap(event:MouseEvent):void
        {
            signal.dispatchEvent(new AppEvent(AppEvent.MOVE_MAP_TO_CENTER));
        }
        ]]></fx:Script>
    <s:Panel skinClass="ui.parts.skins.PanelSkinOutline"
             width="100%"
             height="100%">

        <s:Group width="100%"
                 height="100%">

            <!--Map Controls-->
            <s:Group width="100%">
                <s:Rect width="100%"
                        height="100%"
                        radiusX="5"
                        radiusY="5">
                    <s:fill>
                        <s:SolidColor color="{Color.black}"
                                      alpha=".8"/>
                    </s:fill>
                </s:Rect>
                <s:HGroup width="100%"
                          padding="5"
                          verticalAlign="middle">

                    <s:Button skinClass="ui.parts.skins.ButtonSkinIcon"
                              icon="{Icons.Layers}"
                              toolTip="{Local.text('layers')}"
                              click="onToggleLayers(event)"/>

                    <s:Spacer width="100%"/>

                    <s:Label id="labelMouse"/>

                    <s:Label id="labelZoom"/>

                    <s:Button skinClass="ui.parts.skins.ButtonSkinIcon"
                              icon="{Icons.Minus}"
                              toolTip="{Local.text('zoom_out')}"
                              click="onZoomOut(event)"/>
                    <s:Button skinClass="ui.parts.skins.ButtonSkinIcon"
                              icon="{Icons.Plus}"
                              toolTip="{Local.text('zoom_in')}"
                              click="onZoomIn(event)"/>
                    <s:Button skinClass="ui.parts.skins.ButtonSkinIcon"
                              icon="{Icons.Fit}"
                              toolTip="{Local.text('center_map')}"
                              click="onCenterMap(event)"/>

                </s:HGroup>
            </s:Group>
            <s:HGroup id="groupNearestPoint"
                      width="100%"
                      height="100%"
                      horizontalAlign="center"
                      verticalAlign="bottom"
                      bottom="5"
                      visible="false"
                      mouseEnabled="false">
                <s:Group>
                    <s:Rect width="100%"
                            height="100%"
                            radiusX="15"
                            radiusY="15">
                        <s:fill>
                            <s:SolidColor color="{Color.black}"
                                          alpha=".7"/>
                        </s:fill>
                    </s:Rect>
                    <s:HGroup verticalAlign="middle"
                              padding="5"
                              paddingRight="10">
                        <c:ColorBitmapImage id="iconNearestPoint"
                                            color="{Color.theme}"
                                            source="{Icons.Target}"/>
                        <s:Label id="labelNearestPoint"
                                 color="{Color.theme}"/>
                    </s:HGroup>
                </s:Group>
            </s:HGroup>
        </s:Group>
    </s:Panel>
</staticOverlays:StaticOverlay>
